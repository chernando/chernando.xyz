---
export interface Props {
  title: string;
  description: string;
  image?: string;
  canonical?: string;
  type?: 'website' | 'article';
  publishedTime?: Date;
  modifiedTime?: Date;
  tags?: string[];
  author?: string;
  lang?: string;
  translationKey?: string;
  currentSlug?: string;
}

const {
  title,
  description,
  image = '/favicon.svg',
  canonical,
  type = 'website',
  publishedTime,
  modifiedTime,
  tags = [],
  author = siteConfig.author,
  lang = 'es',
  translationKey,
  currentSlug
} = Astro.props;

// Use centralized description as fallback
const finalDescription = description || siteConfig.descriptions[lang as keyof typeof siteConfig.descriptions];

const canonicalUrl = canonical || new URL(Astro.url.pathname, Astro.site);
const imageUrl = new URL(image, Astro.site);

// Generate hreflang URLs for translations
import { getCollection } from 'astro:content';
import { siteConfig } from '../site.config.ts';
import { ClientRouter } from 'astro:transitions';

// Fonts - Self-hosted via @fontsource for optimal HTTP/2 performance & privacy
import '@fontsource/inter/400.css';
import '@fontsource/inter/500.css';
import '@fontsource/inter/600.css';
import '@fontsource/inter/700.css';
import '@fontsource/jetbrains-mono/400.css';
import '@fontsource/jetbrains-mono/500.css';

import 'modern-normalize/modern-normalize.css';
import '../styles/main.css';

let hreflangs: Array<{lang: string, url: string}> = [];

if (translationKey && currentSlug) {
  const englishPosts = await getCollection('posts-en');
  const spanishPosts = await getCollection('posts-es');

  const englishPost = englishPosts.find(post => post.data.translationKey === translationKey);
  const spanishPost = spanishPosts.find(post => post.data.translationKey === translationKey);

  if (englishPost) {
    hreflangs.push({
      lang: 'en',
      url: `${Astro.site}en/posts/${englishPost.slug}/`
    });
  }

  if (spanishPost) {
    hreflangs.push({
      lang: 'es',
      url: `${Astro.site}articulos/${spanishPost.slug}/`
    });
  }
}
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="utf-8">

    <!-- Basic Meta Tags -->
    <title>{title}</title>
    <meta name="description" content={finalDescription}>
    <meta name="author" content={author}>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="index, follow">

    <!-- Theme color for mobile browsers -->
    <meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)">
    <meta name="theme-color" content="#0a0a0a" media="(prefers-color-scheme: dark)">

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalUrl}>

    <!-- Hreflang tags for translations -->
    {hreflangs.map(({ lang: hrefLang, url }) => (
      <link rel="alternate" hreflang={hrefLang} href={url} />
    ))}
    {hreflangs.length > 0 && (
      <link rel="alternate" hreflang="x-default" href={hreflangs.find(h => h.lang === 'en')?.url || canonicalUrl} />
    )}

    <!-- Resource hints for performance -->
    <link rel="dns-prefetch" href="https://github.com">
    <link rel="dns-prefetch" href="https://twitter.com">
    <link rel="dns-prefetch" href="https://linkedin.com">

    <!-- Favicon and Icons -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">

    <!-- RSS Feeds -->
    <link rel="alternate" type="application/rss+xml" title={`chernando - Blog (${lang === 'es' ? 'Español' : 'English'})`} href={lang === 'es' ? '/rss.xml' : '/en/rss.xml'}>
    {lang === 'es' ? (
      <link rel="alternate" type="application/rss+xml" title="chernando - Blog (English)" href="/en/rss.xml">
    ) : (
      <link rel="alternate" type="application/rss+xml" title="chernando - Blog (Español)" href="/rss.xml">
    )}

    <!-- Open Graph Meta Tags -->
    <meta property="og:title" content={title}>
    <meta property="og:description" content={finalDescription}>
    <meta property="og:type" content={type}>
    <meta property="og:url" content={canonicalUrl}>
    <meta property="og:image" content={imageUrl}>
    <meta property="og:site_name" content="chernando.xyz">

    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary">
    <meta name="twitter:title" content={title}>
    <meta name="twitter:description" content={finalDescription}>
    <meta name="twitter:image" content={imageUrl}>

    <!-- Article specific meta tags -->
    {type === 'article' && (
      <>
        {publishedTime && (
          <meta property="article:published_time" content={publishedTime.toISOString()}>
        )}
        {modifiedTime && (
          <meta property="article:modified_time" content={modifiedTime.toISOString()}>
        )}
        <meta property="article:author" content={author}>
        {tags.map((tag) => (
          <meta property="article:tag" content={tag}>
        ))}
      </>
    )}

    <!-- Generator -->
    <meta name="generator" content={Astro.generator}>

    <!-- Client-side routing for smooth navigation -->
    <ClientRouter />

    <!-- JSON-LD Structured Data -->
    <script type="application/ld+json" is:inline set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": type === 'article' ? 'BlogPosting' : 'WebSite',
      "headline": title,
      "description": finalDescription,
      "url": canonicalUrl,
      "author": {
        "@type": "Person",
        "name": author
      },
      ...(type === 'article' && publishedTime ? {
        "datePublished": publishedTime.toISOString(),
        "dateModified": (modifiedTime || publishedTime).toISOString(),
        "keywords": tags.join(', ')
      } : {})
    })} />
  </head>

  <body>
    <!-- Skip link for accessibility -->
    <a href="#main" class="skip-link">{lang === 'es' ? 'Saltar al contenido principal' : 'Skip to main content'}</a>

    <!-- Site header -->
    <header role="banner">
      <h1><a href={lang === 'es' ? '/' : '/en/'}>Carlos Hernando</a></h1>
      <nav aria-label={lang === 'es' ? 'Navegación principal' : 'Main navigation'}>
        <ul>
          <li><a href={lang === 'es' ? '/' : '/en/'} class="secondary">{lang === 'es' ? 'Inicio' : 'Home'}</a></li>
          <li><a href={lang === 'es' ? '/articulos/' : '/en/posts/'} class="secondary">{lang === 'es' ? 'Artículos' : 'Articles'}</a></li>
        </ul>
      </nav>
    </header>

    <!-- Main content -->
    <main id="main" role="main">
      <slot />
    </main>

    <!-- Site footer -->
    <footer role="contentinfo">
      <slot name="footer-content" />
      <div class="footer-legal">
        <p>
          <small>&copy; 2001-{new Date().getFullYear()}, Carlos Hernando.</small>
        </p>
        <p>
          <small>
            {lang === 'es'
              ? <>Contenido bajo licencia <a href="https://creativecommons.org/licenses/by-sa/4.0/" rel="license noopener noreferrer">CC BY-SA 4.0</a>.</>
              : <>Content licensed under <a href="https://creativecommons.org/licenses/by-sa/4.0/" rel="license noopener noreferrer">CC BY-SA 4.0</a>.</>
            }
            {' '}
            {lang === 'es' ? 'Imágenes © sus respectivos autores.' : 'Images © their respective authors.'}
          </small>
        </p>
        <p>
          <small>
            {lang === 'es' ? 'Construido con' : 'Built with'}{' '}
            <a href="https://astro.build" rel="noopener noreferrer">Astro</a>.
          </small>
        </p>
      </div>
    </footer>
  </body>
</html>
